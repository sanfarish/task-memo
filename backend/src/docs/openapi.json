{
  "openapi": "3.0.3",
  "info": {
    "title": "Task Memo v1.0 - OpenAPI 3.0",
    "description": "This is a documentation of my third project called \"Task Memo\". It is a simple app to create and manage every task to do. The backend build by Node.js environment with Express.js server. It consist of CRUD operation and follows the guidelines of RESTful API. For now, this project is not using any API key or any forms of security. Update will follows!\n\n_Feel free to try this backend. Thank you!_\n\nSome useful links:\n- [Task Memo repository](https://github.com/sanfarish/task-memo)\n- [Task Memo website](https://taskmemo.farishasan.web.id)",
    "contact": {
      "email": "farisfalah@gmail.com"
    },
    "license": {
      "name": "ISC",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://taskmemo.farishasan.web.id/api/v1",
      "description": "Production server"
    },
    {
      "url": "http://127.0.0.1:3003/api/v1",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "tasks",
      "description": "CRUD task to do list"
    }
  ],
  "paths": {
    "/todos": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Finds all tasks",
        "description": "All tasks will be given without limit data and without security.",
        "operationId": "findAllTodos",
        "responses": {
          "200": {
            "description": "Successfully find all tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tasks"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tasks"
                  },
                  "xml": {
                    "name": "tasks"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Create a new task",
        "description": "Create a new task with given data",
        "operationId": "addNewTodo",
        "requestBody": {
          "$ref": "#/components/requestBodies/Task"
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tasks"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Tasks"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/todos/{id}": {
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Deletes a task",
        "description": "Delete a task by given id",
        "operationId": "deleteTodo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the task that needs to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content - Task deleted successfully"
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tasks"
        ],
        "summary": "Updates a task status",
        "description": "Updates a task status whether being finished or not",
        "operationId": "updateTodo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the task that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Done"
        },
        "responses": {
          "200": {
            "description": "Task status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tasks"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Tasks"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Tasks": {
        "required": [
          "task"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "task": {
            "type": "string",
            "description": "Task name",
            "example": "Build a web on May 1st"
          },
          "done": {
            "type": "boolean",
            "description": "Task status being done/not",
            "example": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message",
            "example": "invalid request"
          }
        }
      }
    },
    "requestBodies": {
      "Task": {
        "description": "Create a new task with given data",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "task"
              ],
              "type": "object",
              "properties": {
                "task": {
                  "type": "string",
                  "example": "Build a web on May 1st 2024"
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "task"
              ],
              "type": "object",
              "properties": {
                "task": {
                  "type": "string",
                  "example": "Build a web on May 1st 2024"
                }
              },
              "xml": {
                "name": "task"
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "required": [
                "task"
              ],
              "type": "object",
              "properties": {
                "task": {
                  "type": "string",
                  "example": "Build a web on May 1st 2024"
                }
              }
            }
          }
        }
      },
      "Done": {
        "description": "Update an existent task status to be finished or not",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "done"
              ],
              "type": "object",
              "properties": {
                "done": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "required": [
                "done"
              ],
              "type": "object",
              "properties": {
                "done": {
                  "type": "boolean",
                  "example": true
                }
              },
              "xml": {
                "name": "done"
              }
            }
          },
          "application/x-www-form-urlencoded": {
            "schema": {
              "required": [
                "done"
              ],
              "type": "object",
              "properties": {
                "done": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      }
    }
  }
}